/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.7/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'


group = 'de.webtwob.adg.project'
version = '0.0.1'

sourceCompatibility = 10

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

import org.gradle.plugins.ide.eclipse.model.SourceFolder
eclipse {
    project {
        referencedProjects 'ADG-main', 'ADG-test', 'ADG-file'
        
    	resourceFilter{
    		matcher{
    			id = "all"
    			arguments = "*"
    		}
    	}
    }
    
	classpath {
		downloadJavadoc = true
		downloadSources = true
		 file {
            whenMerged {
            	entries.findAll {it instanceof SourceFolder}*.each {
                    it.output = "bin/" + it.path.split("/")[2]
                }
                entries.findAll {
                    it.kind == 'src' || it.kind == 'lib'
                }.each { it.entryAttributes['module'] = 'true' }
            }
        }
    }
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

sourceSets {
    main
    file
    test
}

//add not yet modularised jars to the module-path to form automatic-modules
tasks.withType(JavaCompile) {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

//workaround for gradle issue GRADLE-1682
tasks.withType(Test) {
    scanForTestClasses = false
    //manualy include test class files
    include "**/*Test.class" //All Files ending in Test.class
}

dependencies {

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.core
	api group: 'org.eclipse.elk', name: 'org.eclipse.elk.core', version: '0.3.0'

	// https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.alg.common.compaction
	api group: 'org.eclipse.elk', name: 'org.eclipse.elk.alg.common.compaction', version: '0.3.0'

	// https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.alg.mrtree
	implementation group: 'org.eclipse.elk', name: 'org.eclipse.elk.alg.mrtree', version: '0.3.0'

	// https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.alg.mrtree
	implementation group: 'org.eclipse.elk', name: 'org.eclipse.elk.alg.force', version: '0.3.0'

	// https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.alg.mrtree
	implementation group: 'org.eclipse.elk', name: 'org.eclipse.elk.alg.layered', version: '0.3.0'

	// https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.graph.json
	implementation group: 'org.eclipse.elk', name: 'org.eclipse.elk.graph.json', version: '0.3.0'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:18.0'

    // https://mvnrepository.com/artifact/org.eclipse.elk/org.eclipse.elk.graph.json
    fileImplementation group: 'org.eclipse.elk', name: 'org.eclipse.elk.graph.json', version: '0.3.0'

    fileImplementation group: 'com.google.code.gson', name: 'gson', version: '2.2.4'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    testCompile sourceSets.file.output
}
